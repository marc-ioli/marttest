# TEMPLATE: Search for the TEMPLATE keyword for sections that must be updated then remove the comment

# When creating a new branch, review all template parameters making sure to:
# - update resources.pipelines.Build.trigger
# - update productName
# - update isRelease
# - update ovrAppId if defined
# - update variable group for OVR_APP_SECRET if defined
# - update mxrReleaseChannel
# - update mxrAppTitle if defined
# - update releaseNotesAppName if defined

# See resources.pipelines.Build for build pipeline trigger
trigger: none

pr: none

resources:
  repositories:
  # These repositories should always be here and should not be defined in the repos parameter
  - repository: PipelineTemplates
    type: github
    endpoint: GITHUB_WRITE
    name: TRANSFR-Inc/PipelineTemplates
    ref: main
  - repository: DevOpsTools
    type: github
    endpoint: GITHUB_WRITE
    name: TRANSFR-Inc/DevOpsTools
    ref: master

  pipelines:
  - pipeline: Build
    # TEMPLATE: Build pipeline triggering this deployment
    source: # TRANSFR-Inc.<name>
    trigger:
      branches:
        include:
        - develop
        - release*/**

variables:
- group: Deploy_Pipeline
- group: # TEMPLATE: [OPTIONAL] variable group containing OVR_APP_SECRET if ovrAppId is not empty

extends:
  template: deploy-template.yml@PipelineTemplates
  parameters:
    productName: # TEMPLATE: App Name (should match build pipeline)
    isRelease: # TEMPLATE: false for qa / green / develop or true for rc / white / release (should match build pipeline)
    # Must define secret variable OVR_APP_SECRET in pipeline or variable group if ovrAppId is not empty
    ovrAppId: # TEMPLATE: [OPTIONAL] All-digits OVR App Id, ommit if no Quest build produced
    ovrUploadChannel: # TEMPLATE: [OPTIONAL] Initial channel to upload to, defaults to 'ALPHA' if omitted
    ovrAltChannels: # TEMPLATE: [OPTIONAL] List of alternate channels to receive the uploaded build (ommit if empty)
    # - ALPHA_TVR
    # - ALPHA_VENDOR
    # - BUSINESS
    mxrUploadQuest: # TEMPLATE: [OPTIONAL] true for builds producing Quest APKs (Upload to ManageXR)
    mxrUploadPico: # TEMPLATE: [OPTIONAL] true for builds producing Pico APKs (Upload to ManageXR)
    mxrReleaseChannel: # TEMPLATE: [OPTIONAL] Channel to upload to in ManageXR, defaults to 'QA' if omitted
    mxrAppTitle: # TEMPLATE: [OPTIONAL] title for app in ManageXR, defaults to value from APK if omitted
    s3BuildBucket: # TEMPLATE: [OPTIONAL] AWS S3 bucket to upload APK to, defaults to 'transfr-vr-builds' (isRelease must be 'true')
    s3BuildPrefix: # TEMPLATE: [OPTIONAL] AWS S3 bucket prefix, should use packageNamePrefix from build pipeline, MUST END WITH '/' (isRelease must be 'true')
    releaseNotesAppName: # TEMPLATE: [OPTIONAL] Release notes app title, defaults to 'productName' value if omitted
